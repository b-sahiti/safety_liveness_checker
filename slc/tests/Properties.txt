FW-IDPS-LB
FW-IPDS-rateLimiter
FW-IPDS-monitor-rateLimiter

1. Reachability 
    1.1 Universality, Global : G (path)
    1.2 After : F (path)
    1.3 After, Bounded existence : F(path) < k steps
    1.4 Conditional Reachability: : Response

   This property can be per NF or over a set of NF.
   Specification Generation: Find reachability in terms of rules and the add appropriate G or F 
2. Way pointing
    2.1 Presence : Global (Eg: Through a node)
    2.2 Absence : Global (Eg: Never through a node)
3. Modification:
    3.1 After: p -> q
        If src=E is whitelisted then it can reach 
        Specification Generation:  Maybe CTL is better ??? - TODO


4. F(G()): Routing Convergence

5. G and F Combos Check

Table 1:
    Reachability: More concrete examples:
        NFs
        Simple
    Way-pointing
    Service


    
    
Property                      Meaning                                             Notation                                                        Formal Representation  Safety Automaton Liveness Automaton
Global Reachability           There is always a feasible path                     G(src=I, dst=D; send())                                            BA                        SBA             LBA
Global non-reachability       There should never be a path                        G(src=I, dst=D; drop())
Future Reachability           Path will exist in future                           F(src=I, dst=D; send())                                             BA                        SBA             LBA
Conditional Reachability      An event will enable a path in future               src=I, dst=D, authentication;drop()  -> F( src=I, dst=D; send())     
                              Eg: After authentication user can reach file server
Immediate reachability        An event will immediately enable a path             src=I, dst=D,counter>10;send()  -> N( src=I, dst=D; drop())  
                              Eg: A authenticated  source will 
                              immediately access file server 
Immediate non-reachability    An event will change state immediately              src=I, dst=D, blacklisted  -> N( src=I, dst=D; drop())  
                              Eg: A black listed source will loose 
                              access to file server immediately
Chain Events                  The system states will change in a specific pattern src=I, dst=D, rate(1);send() U src=I, dst=D,rate(2); send() U src=I, dst=D,rate(3); send() 
                              Eg1: Rate limiter will reduce speed                   
                              from S1 to S2 then to S3 and so on
                              Eg2: Source traffic will be dropped until it is 
                              authenticated and then it will be allowed 

Always in future / After      Once path is established, it will always exist       F(G(src=I, dst=D; send()))
                              Eg: If authenticated, the user can always reach a server    
                               


port knocking: security paper

Table 2:
    classes of properties: Eg: Say how each property can fall into each of the below categories G, F, X

    Absence: G(!p)
    existence: F (p)
    Bounded existence: F(p) in k steps
    Universality: G p
    Precedence: G q before p
    Response: G(p-> (q))
    Chain Precedence:  q1,q2,q3,...p1,p2,p3...
    Chain Response: p1,p2,p3...q1,q2,q3,...



Table 3:

Component                           Property
Counter        -------------------- Counter counts all IPs   

Load Balancer:    ---------------  The traffic is sent to either s1 or S2 G( (src=*; send(s1)) xor  (src=*; send(s2))) 
                                   All packets from same flow are sent to same server
        Hash based
        Stateful
Port knocking  -------------------- Only desired closed port
                                    Path only after knocking on closed port (src=x & dst_port=p)-> X(scr=x & dst=p2;send() & (dst=x&src_[port=p2;send())])
Firewalls
    src & dst  -------------------- G(src=I & dst=D;send()) or G(!(src=I & dst=D;send())) or G(src=I & dst=D;drop())
    src & dst & header fields -----  same as above with additional match fields
    stateful   --------------------  (src=I & dst=D;send() & src=D & dst=I;drop()) -> src=D & dst=I;send() [src=D traffic is blocked until I connects to D first]
                                      src=D & dst=I;drop() U src=I & dst=D;send()  [src=D traffic is blocked until I connects to D first]
IP rewrite     -------------------- Redirect only needed flows
                                    Redirect to only specific IPs
Rate limiter   -------------------  Rate limit as needed based on IP or other fields     G(src=x; send(I0)) 
                                    Only two possible sending rates    G(src=x;send(I0) xor src=x;send(I1))
                                    Rate limit based on counter/usage G((src=x & 0<count<y;send(I0)) & (src=x & y<count;send(I1))) 
                                    Rate limit decrement rate, based on usage in a specific order (src=x;send(I0) U src=x; send(I1))

Spam Detecter  ------------------  Spam gets detected 
FTP monitor    ------------------  f(P -> !P U(S & !P))
IDPS
    Heavy Hitters --------------- F(G(src=*,c>L1);drop()) . or G(F(src=*,c>L1);drop()) 
    SYN-Fin
    flow detector
    DNS amplification Mitigation
    UDP flood 
Application Chaining:
    FW-IDPS-server    ----------- A certain user can reach server
                                  An attacher (counter in IDPS > L1) will get blocked
    FW-IDPS-LB-server
    Can we check Equivalence???  eg: For src=I1 is FW1==FW2==FW3 *****
                                Gateway -- FW1 - S1 
                                       |__ Fw2 - S2
                                        |__ FW3 - S3



Lower Level1:
Does FW/IDPS send all traffic to IDPS/LB only?  G(src=* ; send (IDPS) or src=*; drop())
On a particular table, are all ackets with some match sent on particular interface only?
Which IPs are ever allowed through a NF Table
Which ports are used by a Table?
Do any headers get manipulated in the table?*****


Lower Level2:
Are the tables implemented correctly? -- Connect to other verifiers






     
